---
interface Tab {
  id: string;
  label: string;
  icon: string;
}
interface Props {
  tabs: Tab[];
}
const { tabs } = Astro.props;
---
<div class="tab-interface-container bg-white shadow-md rounded-lg overflow-hidden">
    <div class="border-b border-gray-200">
        <nav class="flex flex-wrap justify-center -mb-px">
            {tabs.map((tab, index) => (
                <button
                    data-tab-button={tab.id}
                    class:list={["tab-btn text-sm sm:text-base py-4 px-3 sm:px-6", { 'active': index === 0 }]}
                    role="tab"
                    aria-selected={index === 0}
                    aria-controls={`tab-content-${tab.id}`}
                >
                    <i class:list={["fas", tab.icon, "mr-2"]}></i>{tab.label}
                </button>
            ))}
        </nav>
    </div>
    <div class="p-6 md:p-8">
        <slot />
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const container = document.querySelector('.tab-interface-container');
        if (!container) return;

        const tabButtons = container.querySelectorAll('[data-tab-button]');
        const tabContents = container.querySelectorAll('[data-tab-content]');

        function showTab(tabId) {
            // Update button states
            tabButtons.forEach(btn => {
                const isActive = btn.getAttribute('data-tab-button') === tabId;
                btn.classList.toggle('active', isActive);
                btn.setAttribute('aria-selected', String(isActive));
            });

            // Update content visibility
            tabContents.forEach(content => {
                const isVisible = content.getAttribute('data-tab-content') === tabId;
                (content as HTMLElement).classList.toggle('hidden', !isVisible);
            });
        }

        // Add click listeners to buttons
        tabButtons.forEach(button => {
            button.addEventListener('click', () => {
                const tabId = button.getAttribute('data-tab-button');
                if (tabId) showTab(tabId);
            });
        });
    });
</script>

<style>
    .tab-btn {
        transition: all 0.3s ease;
        border-bottom: 3px solid transparent;
        cursor: pointer;
        color: #4B5563; /* Gray-600 */
    }
    .tab-btn.active {
        border-bottom-color: #3B82F6; /* Blue-500 */
        color: #3B82F6;
        font-weight: 600;
    }
</style>
