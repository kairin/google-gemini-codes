---
// src/components/BaseLink.astro
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'a'> {
  href: string;
}

const { href, class: className, ...rest } = Astro.props;

// This is the corrected logic.
// It takes the base path (e.g., '/google-gemini-codes') and the link href (e.g., '/data-tools')
// and joins them, then cleans up any double slashes. This is a reliable way to build paths.
const resolvedUrl = (import.meta.env.BASE_URL + href).replace(/\/+/g, '/');
---
<a href={resolvedUrl} class:list={[className]} {...rest}>
  <slot />
</a>
<style>
  a {
    color: #007bff;
    text-decoration: none;
  }
  a:hover {
    text-decoration: underline;
  }
  header nav a {
    color: white;
    padding: 0.5em 1em;
    border-radius: 4px;
  }
  header nav a:hover {
    background-color: #555;
  }
</style>
