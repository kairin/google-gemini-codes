---
interface Props {
    chartId: string;
    labels: string[];
    data: number[];
}
const { chartId, labels, data } = Astro.props;
---
<div class="chart-container relative mx-auto h-[350px] w-full max-w-sm">
    <canvas id={chartId}></canvas>
</div>

<script define:vars={{ chartId, labels, data }}>
    // Use a dynamic import to load Chart.js, which is better for tree-shaking and performance.
    import('chart.js/auto').then(({ Chart }) => {
        const ctx = document.getElementById(chartId)?.getContext('2d');
        if (!ctx) {
            console.error(`Chart canvas with id #${chartId} not found.`);
            return;
        }

        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Solution Components',
                    data: data,
                    backgroundColor: [
                        'rgb(147, 197, 253)', // blue-300
                        'rgb(110, 231, 183)', // emerald-300
                        'rgb(253, 224, 71)',  // yellow-400
                        'rgb(196, 181, 253)', // violet-300
                        'rgb(252, 165, 165)'  // red-300
                    ],
                    hoverOffset: 4,
                    borderColor: document.documentElement.classList.contains('dark') ? '#1e293b' : '#ffffff', // slate-900 or white
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            // Adapt legend text color to light/dark mode
                            color: document.documentElement.classList.contains('dark') ? '#cbd5e1' : '#475569' // slate-300 or slate-600
                        }
                    }
                }
            }
        });
    }).catch(error => console.error('Failed to load Chart.js module', error));
</script>
