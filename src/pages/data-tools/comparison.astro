---
import BaseLayout from '../../layouts/BaseLayout.astro';
---
<BaseLayout title="Tool Comparison" description="Comparing Power Query, DuckDB, and GraphRAG.">
    <header class="text-center mb-10">
        <h1 class="text-4xl font-bold text-gray-800 dark:text-slate-100">Feature Showdown</h1>
        <p class="mt-2 text-lg text-gray-600 dark:text-slate-300">A detailed analysis of how each tool stacks up for different users and their goals.</p>
    </header>

    <article class="prose prose-lg dark:prose-invert max-w-4xl mx-auto">
        <h2>Primary Use Case</h2>
        <ul>
            <li><strong>Power Query:</strong> Self-service ETL and data prep for business intelligence dashboards.</li>
            <li><strong>DuckDB:</strong> Fast, in-process analytical SQL queries on local or remote data files.</li>
            <li><strong>GraphRAG:</strong> Context-aware Q&A over private, interconnected data using LLMs.</li>
        </ul>

        <h2>Performance</h2>
        <ul>
            <li><strong>Power Query:</strong> Optimized for BI-scale data (millions of rows). Performance is tied to the speed of the data sources.</li>
            <li><strong>DuckDB:</strong> Exceptional speed for complex SQL on raw files, often outperforming server-based databases for analytical queries.</li>
            <li><strong>GraphRAG:</strong> Performance is variable, as it depends on the query speed of the underlying graph database and the token latency of the LLM.</li>
        </ul>

        <h2>Ease of Use</h2>
        <ul>
            <li><strong>Power Query:</strong> Very high. Its graphical interface allows for complex transformations with minimal code required.</li>
            <li><strong>DuckDB:</strong> High for developers who know SQL. The zero-dependency `pip install` setup is trivial.</li>
            <li><strong>GraphRAG:</strong> Low to medium. It is a complex framework requiring significant expertise to implement, not a plug-and-play tool.</li>
        </ul>
        
        <h2>Scalability</h2>
        <ul>
            <li><strong>Power Query:</strong> Scales from the desktop to the cloud via Power BI dataflows for departmental workloads.</li>
            <li><strong>DuckDB:</strong> Excels at vertical scalability, capable of processing larger-than-RAM datasets on a single powerful machine.</li>
            <li><strong>GraphRAG:</strong> Scalability is component-based. It depends entirely on the scalability of the chosen graph database and the LLM provider.</li>
        </ul>
    </article>
</BaseLayout>
