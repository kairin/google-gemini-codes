---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Card from '../../components/Card.astro';
import ReactGirihDesigner from '../../components/ReactGirihDesigner.astro'; // <-- IMPORT OUR NEW BRIDGE COMPONENT
---
<BaseLayout title="Ancient Sophistication" description="The mathematics of Girih tiles and tessellation in Islamic architecture.">

    <!-- Header & Sub-Navigation (Unchanged) -->
    <header class="bg-white/80 dark:bg-slate-900/80 backdrop-blur-lg sticky top-[72px] z-40 border-b dark:border-slate-700 -mx-4 px-4 mb-12">
        <div class="container mx-auto flex justify-between items-center py-3">
            <h2 class="text-xl font-bold text-gray-800 dark:text-slate-100">Ancient Sophistication</h2>
            <nav class="hidden md:flex space-x-6">
                <a href="#introduction" class="nav-link active">Introduction</a>
                <a href="#the-tiles" class="nav-link">The Tiles</a>
                <a href="#the-patterns" class="nav-link">The Patterns</a>
            </nav>
        </div>
    </header>

    <!-- Main Content Sections -->
    <div class="container mx-auto">
        <!-- Section 1: Introduction (Unchanged) -->
        <section id="introduction" class="text-center py-16">
            <h1 class="section-title text-4xl md:text-5xl font-bold mb-4 dark:text-slate-100">An Integration of Knowledge</h1>
            <p class="max-w-3xl mx-auto text-lg text-gray-600 dark:text-slate-300">
                The geometric ornamentation in Islamic art reveals a profound mathematical understanding. This exploration focuses on Girih patterns, which are based on a set of five fundamental tiles that interlock to form complex and intricate tessellations.
            </p>
            <div class="grid md:grid-cols-3 gap-8 my-12 max-w-6xl mx-auto text-left">
                <Card icon="fa-solid fa-infinity" title="Mathematical Wisdom">
                    <p>The beauty of Girih patterns stems from the fact that they can create aperiodic arrangements, meaning the patterns do not repeat themselves in a regularly translating manner, a concept that predates modern quasicrystal discovery.</p>
                </Card>
                <Card icon="fa-solid fa-compass-drafting" title="Artisans as Pioneers">
                    <p>Medieval Islamic artisans likely used tools like compasses and straightedges, relying on their deep knowledge of geometry and symmetry to create these elaborate patterns without modern computational aids.</p>
                </Card>
                <Card icon="fa-solid fa-eye" title="A Different Way of Seeing">
                     <p>The visual pattern is created by the lines or "strapwork" drawn on the tiles, not the tile boundaries themselves. These lines create a continuous network across the entire tiling, forming the intricate final designs.</p>
                </Card>
            </div>
        </section>

        <!-- Section 2: The Five Girih Tiles (Unchanged) -->
        <section id="the-tiles" class="py-16">
            <!-- ... This section with the 5 SVG tiles is unchanged ... -->
        </section>

        <!-- Section 3: The Patterns - THIS IS THE UPDATED SECTION -->
        <section id="the-patterns" class="py-16">
            <div class="text-center">
                <h1 class="section-title text-4xl md:text-5xl font-bold mb-4 dark:text-slate-100">Interactive Girih Tile Designer</h1>
                <p class="max-w-3xl mx-auto text-lg text-gray-600 dark:text-slate-300">Below is a fully interactive Girih tile editor, built with React and rendered within this Astro page. Use the controls to add, undo, and change tile shapes and colors.</p>
            </div>
            <div class="my-12 text-center">
                <!--
                THE OLD CANVAS AND BUTTONS ARE GONE.
                They are replaced by our single Astro component that wraps the entire React app.
                -->
                <ReactGirihDesigner />
            </div>
        </section>
    </div>
</BaseLayout>

<!-- Page-specific styles (Unchanged) -->
<style>
  .nav-link { /* ... */ }
</style>

<!-- The old script that controlled the canvas has been REMOVED. This is now the correct version. -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- Scrollspy Navigation Logic ---
        const navLinks = document.querySelectorAll('.nav-link');
        const sections = document.querySelectorAll('section[id]');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const id = entry.target.getAttribute('id');
                    navLinks.forEach(link => {
                        link.classList.toggle('active', link.getAttribute('href') === `#${id}`);
                    });
                }
            });
        }, { threshold: 0.5 });
        sections.forEach(section => observer.observe(section));
    });
</script>
