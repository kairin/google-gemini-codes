// FILE: src/pages/f5-vpn/index.astro
// This page is updated to use the Card component with the new features.
---
import BaseLayout from '@/layouts/BaseLayout.astro';
import ContentHeader from '@/components/ContentHeader.astro';
import Card from '@/components/Card.astro';
import BaseLink from '@/components/BaseLink.astro';
---
<BaseLayout 
    title="Dockerized F5 VPN Solution"
    description="A technical deep-dive into containerizing the F5 BIG-IP APM client for streamlined and secure intranet access."
>
    <ContentHeader
        title="Dockerized F5 VPN Solution"
        description="A technical deep-dive into containerizing the F5 BIG-IP APM client for streamlined and secure intranet access."
    />

    <header class="bg-white/80 dark:bg-slate-900/80 backdrop-blur-lg sticky top-[72px] z-40 border-b dark:border-slate-700 -mx-4 px-4 mb-12">
        <div class="container mx-auto flex justify-center items-center py-3">
            <nav class="flex flex-wrap justify-center items-center gap-x-4 sm:gap-x-6 text-sm sm:text-base">
                <a href="#challenge" class="nav-link active">The Challenge</a>
                <a href="#architecture" class="nav-link">Architecture</a>
                <a href="#implementation" class="nav-link">Implementation</a>
                <a href="#troubleshooting" class="nav-link">Troubleshooting</a>
            </nav>
        </div>
    </header>

    <div class="max-w-4xl mx-auto prose dark:prose-invert prose-lg space-y-12">
        <section id="challenge">
            <h2 class="!text-3xl !mb-6">The Challenge: Why F5 is Different</h2>
            <p>Containerizing the F5 client requires understanding its unique characteristics. Unlike modern tools, it is not a simple command-line utility and presents several technical hurdles on systems like Ubuntu 24.04 LTS.</p>
        </section>

        <section id="architecture">
            <h2 class="!text-3xl !mb-6">Architectural Decision: VNC vs. X11</h2>
            <p>The core architectural choice is how to provide a GUI from a headless container. We strongly recommend the VNC approach for its robustness and portability over the brittle, platform-dependent X11 forwarding method.</p>
        </section>

        <section id="implementation">
            <h2 class="!text-3xl !mb-6">Implementation Highlights</h2>
            <div class="not-prose grid md:grid-cols-2 gap-6 my-8">
                <Card href="#!" icon="fa-brands fa-docker" title="Dockerfile & Dependencies" blurb="Starts with Ubuntu, installs the client, and handles legacy libraries." details="The Dockerfile starts with Ubuntu 24.04, installs the F5 client `.deb` package, and crucially, creates a symbolic link for the missing `libxml2.so.2` library." />
                <Card href="#!" icon="fa-solid fa-desktop" title="GUI & Browser Setup" blurb="Installs a virtual display, VNC server, and non-snap browsers." details="A virtual display (Xvfb) and VNC server are installed, with browsers like Firefox added from official PPAs to avoid snap-related issues in a containerized environment." />
                <Card href="#!" icon="fa-solid fa-robot" title="VPN Automation" blurb="Uses the `f5fpc` CLI for reliable connection automation." details="An entrypoint script utilizes the `f5fpc` command-line tool to establish the VPN connection, passing credentials securely via environment variables at runtime." />
                <Card href="#!" icon="fa-solid fa-network-wired" title="Docker Networking" blurb="Requires `NET_ADMIN` capability and often the `--net=host` flag." details="The container is run with `--cap-add=NET_ADMIN` to manage network routes. To avoid IP conflicts, using `--net=host` is the simplest and most reliable solution." />
            </div>
        </section>

        <section id="troubleshooting">
            <h2 class="!text-3xl !mb-6">Key Troubleshooting Steps</h2>
            <p>Two issues account for nearly all common failures with this setup: `libxml2.so.2` not being found and IP address conflicts between Docker and the corporate VPN. Both are solvable with specific configuration steps in the Dockerfile and at runtime.</p>
        </section>
    </div>

    <div class="text-center mt-16">
        <BaseLink href="/" text="Back to Home" style="secondary" icon="fa-solid fa-arrow-left" />
    </div>
</BaseLayout>

<style is:global>
  .nav-link { @apply text-gray-600 dark:text-slate-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors py-1 border-b-2 border-transparent; }
  .nav-link.active { @apply text-blue-600 dark:text-blue-400 border-blue-600 dark:border-blue-400 font-semibold; }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const navLinks = document.querySelectorAll('a.nav-link[href^="#"]');
        const sections = document.querySelectorAll('section[id]');
        const header = document.querySelector('header.sticky');
        const headerHeight = header ? header.offsetHeight : 72;
        if (navLinks.length === 0 || sections.length === 0) return;
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const id = entry.target.getAttribute('id');
                    navLinks.forEach(link => {
                        link.classList.toggle('active', link.getAttribute('href') === `#${id}`);
                    });
                }
            });
        }, { rootMargin: `-${headerHeight}px 0px -70% 0px` });
        sections.forEach(section => observer.observe(section));
         navLinks.forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                if (targetElement) {
                    const elementPosition = targetElement.getBoundingClientRect().top;
                    const offsetPosition = elementPosition + window.scrollY - headerHeight;
                    window.scrollTo({ top: offsetPosition, behavior: "smooth" });
                }
            });
        });
    });
</script>
